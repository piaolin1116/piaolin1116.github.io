{"version":3,"file":"js/about.710499de.js","mappings":"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","sources":["webpack://comprj01/./src/views/AboutView.vue","webpack://comprj01/./src/views/AboutView.vue?d56f","webpack://comprj01/./src/views/Page4301View.vue","webpack://comprj01/./src/components/vue4301/Vue4301Comp.vue","webpack://comprj01/./src/components/vue4301/Vue4301Comp.vue?ab12","webpack://comprj01/./src/views/Page4301View.vue?63cb","webpack://comprj01/./src/views/TodoView.vue","webpack://comprj01/./src/components/todo/TodoHeader.vue","webpack://comprj01/./src/components/todo/TodoHeader.vue?79d6","webpack://comprj01/./src/components/todo/TodoFooter.vue","webpack://comprj01/./src/components/todo/TodoFooter.vue?b171","webpack://comprj01/./src/components/todo/TodoInput.vue","webpack://comprj01/./src/components/todo/TodoInput.vue?c45a","webpack://comprj01/./src/components/todo/TodoList.vue","webpack://comprj01/./src/components/todo/TodoList.vue?074c","webpack://comprj01/./src/views/TodoView.vue?2f12","webpack://comprj01/./src/views/Vue3104View.vue","webpack://comprj01/./src/components/vue3104/Vue3104Counter.vue","webpack://comprj01/./src/components/vue3104/Vue3104Counter.vue?e241","webpack://comprj01/./src/views/Vue3104View.vue?6a1e","webpack://comprj01/./src/views/Vue31exView.vue","webpack://comprj01/./src/components/vue3103/Vue3103Comp.vue","webpack://comprj01/./src/components/vue3103/Vue3103Comp.vue?e629","webpack://comprj01/./src/views/Vue31exView.vue?8005","webpack://comprj01/./src/views/Vue3403View.vue","webpack://comprj01/./src/components/vue3403/Vue3403Comp.vue","webpack://comprj01/./src/components/vue3403/Vue3403Comp.vue?9697","webpack://comprj01/./src/views/Vue3403View.vue?b0e1","webpack://comprj01/./src/views/Vue34exView.vue","webpack://comprj01/./src/components/vue34ex/Vue34exParent.vue","webpack://comprj01/./src/components/vue34ex/Vue34exChild.vue","webpack://comprj01/./src/components/vue34ex/Vue34exChild.vue?e015","webpack://comprj01/./src/components/vue34ex/Vue34exParent.vue?6948","webpack://comprj01/./src/views/Vue34exView.vue?a440","webpack://comprj01/./src/views/Vue3501View.vue","webpack://comprj01/./src/components/vue3501/Vue3501Comp.vue","webpack://comprj01/./src/components/vue3501/Vue3501Comp.vue?41a0","webpack://comprj01/./src/views/Vue3501View.vue?543b","webpack://comprj01/./src/views/Vue3701View.vue","webpack://comprj01/./src/components/vue3701/CompChild1.vue","webpack://comprj01/./src/components/vue3701/CompChild11.vue","webpack://comprj01/./src/components/vue3701/CompChild11.vue?9b9b","webpack://comprj01/./src/components/vue3701/CompChild1.vue?ae44","webpack://comprj01/./src/components/vue3701/CompChild2.vue","webpack://comprj01/./src/components/vue3701/CompChild2.vue?ba34","webpack://comprj01/./src/views/Vue3701View.vue?4035"],"sourcesContent":["<template>\r\n  <div class=\"about\">\r\n    <h1>This is an about page</h1>\r\n  </div>\r\n</template>\r\n","import { render } from \"./AboutView.vue?vue&type=template&id=48dedea6\"\nconst script = {}\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<style scoped></style>\r\n\r\n<template>\r\n  <div id=\"app\">\r\n    <h2>vuex 를 사용하는 프로그램을 만들어 본다.</h2>\r\n    <Vue4301Comp></Vue4301Comp>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n// vuex 라이브러리에서 mapActions, mapMutations, mapState, mapGetters 함를 가져옵니다.\r\n// import { mapActions, mapMutations, mapState, mapGetters } from 'vuex';\r\nimport Vue4301Comp from '../components/vue4301/Vue4301Comp.vue';\r\nexport default {\r\n  /* pdtmc^2w */\r\n  props: [],\r\n  data() {\r\n    /* 컴포넌트 안에서 사용되는 변수 등록. 개별 변수 */\r\n    return {};\r\n  },\r\n  //template: ``,\r\n  methods: {\r\n    /* 이벤트 핸들러 등록 + 일반 함수 */\r\n    /* vuex 를 사용하는 경우\r\n      mapActions 는 store의 actions 를 가져오는 헬퍼 메서드입니다.\r\n      namespaced: true를 설정한 경우 네임스페이스를 사용하기 때문에 store의 모듈 명을 적어주어야 합니다.\r\n      store 모듈에서 actions 를 가져오는 2가지 방식\r\n      1) store.모듈명.actions 이름 바꾸어 사용하기(추천방식)\r\n         ...mapActions('모듈명', { dispatch액션명1: '액션명1', dispatch액션명2: '액션명2' }),\r\n      2) store.모듈명.actions 이름 그대로 사용하기\r\n         ...mapActions('모듈명', ['액션명1', '액션명2']),\r\n      */\r\n  },\r\n  components: {\r\n    /* 전역 컴포넌트인 경우는 등록하지 않는다. 전역 컴포넌트는 프로토타입 체인으로 찾을 수 있기 때문에 */\r\n    /* 지역 컴포넌트나 파일 컴포넌트만 등록 한다. 예시) \"태그명\" : 컴포넌트명 */\r\n    Vue4301Comp: Vue4301Comp,\r\n  },\r\n  computed: {\r\n    /* 자동처리 + 동기식. 메서드로 작성. return 필수. data 와 공존 불가 */\r\n    /* vuex 를 사용하는 경우\r\n      mapGetters 는 store의 getters 를 가져오는 헬퍼메서드입니다.\r\n      namespaced: true를 설정한 경우 네임스페이스를 사용하기 때문에 store의 모듈 명을 적어주어야 합니다.\r\n      store 모듈에서 getters 를 가져오는 2가지 방식\r\n      1) store.모듈명.getters 이름 바꾸어 사용하기\r\n         ...mapGetters('모듈명', { get게터명1: '게터명1', get게터명2: '게터명2' }),\r\n      2) store.모듈명.getters 이름 그대로 사용하기(추천방식)\r\n         ...mapGetters('모듈명', ['게터명1', '게터명2']),\r\n      */\r\n  },\r\n  watch: {\r\n    /* 자동처리 + 비동기식. data 에 등록된 프로퍼티(변수) 모니터링. 메서드로 작성. 매개변수 필수. 외부 api 호출을 위해서 사용 */\r\n  },\r\n  created() {\r\n    console.log('created');\r\n  },\r\n  mounted() {\r\n    console.log('mounted');\r\n    /* store의 actions 호출 */\r\n    // this.$store.dispatch('액션명', payload);\r\n  },\r\n  updated() {\r\n    console.log('updated');\r\n  },\r\n};\r\n</script>\r\n","<style scoped></style>\r\n\r\n<template>\r\n  <div id=\"app\">\r\n    <h1>{{ header }}</h1>\r\n    <h2>{{ welcome }}</h2>\r\n    <h3>{{ counter }}</h3>\r\n    <div><input type=\"checkbox\" v-model=\"callapi\" />외부 api 호출</div>\r\n    <button v-on:click=\"handlerIncrement\">더해줘</button>\r\n    <button v-on:click=\"handlerDecrement\">빼줘</button>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n// vuex 라이브러리에서 mapActions, mapMutations, mapState, mapGetters 함를 가져옵니다.\r\nimport { mapActions, mapMutations, mapState, mapGetters } from 'vuex';\r\n\r\nexport default {\r\n  /* pdtmc^2w */\r\n  props: [],\r\n  data() {\r\n    /* 컴포넌트 안에서 사용되는 변수 등록. 개별 변수 */\r\n    return {\r\n      header: 'Vuex 사용 앱',\r\n      /*welcome: 'HELLO WORLD',\r\n      counter: 0, */\r\n      callapi: false,\r\n    };\r\n  },\r\n  //template: ``,\r\n  methods: {\r\n    /* 이벤트 핸들러 등록 + 일반 함수 */\r\n    /* vuex 를 사용하는 경우\r\n      mapActions 는 store의 actions 를 가져오는 헬퍼 메서드입니다.\r\n      namespaced: true를 설정한 경우 네임스페이스를 사용하기 때문에 store의 모듈 명을 적어주어야 합니다.\r\n      store 모듈에서 actions 를 가져오는 2가지 방식\r\n      1) store.모듈명.actions 이름 바꾸어 사용하기(추천방식)\r\n         ...mapActions('모듈명', { dispatch액션명1: '액션명1', dispatch액션명2: '액션명2' }),\r\n      2) store.모듈명.actions 이름 그대로 사용하기\r\n         ...mapActions('모듈명', ['액션명1', '액션명2']),\r\n      */\r\n    ...mapActions('counterStore', {\r\n      dispatchSetCounter: 'setCounter',\r\n    }),\r\n    handlerIncrement(e) {\r\n      console.log(e.target);\r\n      //this.$data.counter = this.$data.counter + 1;\r\n      this.dispatchSetCounter(+1);\r\n    },\r\n    handlerDecrement(e) {\r\n      console.log(e.target);\r\n      //this.$data.counter = this.$data.counter - 1;\r\n      this.dispatchSetCounter(-1);\r\n    },\r\n  },\r\n  components: {\r\n    /* 전역 컴포넌트인 경우는 등록하지 않는다. 전역 컴포넌트는 프로토타입 체인으로 찾을 수 있기 때문에 */\r\n    /* 지역 컴포넌트나 파일 컴포넌트만 등록 한다. 예시) \"태그명\" : 컴포넌트명 */\r\n  },\r\n  computed: {\r\n    /* 자동처리 + 동기식. 메서드로 작성. return 필수. data 와 공존 불가 */\r\n    /* vuex 를 사용하는 경우\r\n      mapGetters 는 store의 getters 를 가져오는 헬퍼메서드입니다.\r\n      namespaced: true를 설정한 경우 네임스페이스를 사용하기 때문에 store의 모듈 명을 적어주어야 합니다.\r\n      store 모듈에서 getters 를 가져오는 2가지 방식\r\n      1) store.모듈명.getters 이름 바꾸어 사용하기\r\n         ...mapGetters('모듈명', { get게터명1: '게터명1', get게터명2: '게터명2' }),\r\n      2) store.모듈명.getters 이름 그대로 사용하기(추천방식)\r\n         ...mapGetters('모듈명', ['게터명1', '게터명2']),\r\n      */\r\n    ...mapGetters('counterStore', ['welcome', 'counter']),\r\n  },\r\n  watch: {\r\n    /* 자동처리 + 비동기식. data 에 등록된 프로퍼티(변수) 모니터링. 메서드로 작성. 매개변수 필수. 외부 api 호출을 위해서 사용 */\r\n  },\r\n  created() {\r\n    console.log('created');\r\n  },\r\n  mounted() {\r\n    console.log('mounted');\r\n    /* store의 actions 호출 */\r\n    // this.$store.dispatch('액션명', payload);\r\n  },\r\n  updated() {\r\n    console.log('updated');\r\n  },\r\n};\r\n</script>\r\n","import { render } from \"./Vue4301Comp.vue?vue&type=template&id=1ab07a3f\"\nimport script from \"./Vue4301Comp.vue?vue&type=script&lang=js\"\nexport * from \"./Vue4301Comp.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import { render } from \"./Page4301View.vue?vue&type=template&id=08dfaa1f\"\nimport script from \"./Page4301View.vue?vue&type=script&lang=js\"\nexport * from \"./Page4301View.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<style scoped></style>\r\n\r\n<template>\r\n  <div id=\"app\">\r\n    <!-- TodoHeader -->\r\n    <TodoHeader></TodoHeader>\r\n\r\n    <!-- TodoInput -->\r\n    <TodoInput v-on:addTodo=\"addTodo\"></TodoInput>\r\n\r\n    <!-- TodoList -->\r\n    <TodoList\r\n      v-bind:todoItems=\"todoItems\"\r\n      v-on:doneToggle=\"doneToggle\"\r\n      v-on:removeTodo=\"removeTodo\"\r\n    ></TodoList>\r\n\r\n    <!-- TodoFooter -->\r\n    <TodoFooter v-on:clearAll=\"clearAll\"></TodoFooter>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n// vuex 라이브러리에서 mapActions, mapMutations, mapState, mapGetters 함를 가져옵니다.\r\n// import { mapActions, mapMutations, mapState, mapGetters } from 'vuex';\r\nimport TodoHeader from '../components/todo/TodoHeader';\r\nimport TodoFooter from '../components/todo/TodoFooter';\r\nimport TodoInput from '../components/todo/TodoInput';\r\nimport TodoList from '../components/todo/TodoList';\r\n\r\nexport default {\r\n  /* pdtmc^2w */\r\n  props: [],\r\n  data() {\r\n    /* 컴포넌트 안에서 사용되는 변수 등록. 개별 변수 */\r\n    return {\r\n      todoItems: [\r\n        { id: 1, todo: '영화보기', done: false },\r\n        { id: 2, todo: '주말 산책', done: true },\r\n        { id: 3, todo: 'ES6 학습', done: false },\r\n        { id: 4, todo: '잠실 야구장', done: false },\r\n      ],\r\n    };\r\n  },\r\n  //template: ``,\r\n  methods: {\r\n    /* 이벤트 핸들러 등록 + 일반 함수 */\r\n    /* vuex 를 사용하는 경우\r\n      mapActions 는 store의 actions 를 가져오는 헬퍼 메서드입니다.\r\n      namespaced: true를 설정한 경우 네임스페이스를 사용하기 때문에 store의 모듈 명을 적어주어야 합니다.\r\n      store 모듈에서 actions 를 가져오는 2가지 방식\r\n      1) store.모듈명.actions 이름 바꾸어 사용하기(추천방식)\r\n         ...mapActions('모듈명', { dispatch액션명1: '액션명1', dispatch액션명2: '액션명2' }),\r\n      2) store.모듈명.actions 이름 그대로 사용하기\r\n         ...mapActions('모듈명', ['액션명1', '액션명2']),\r\n      */\r\n    clearAll(e) {\r\n      console.log(e.target);\r\n      this.$data.todoItems = [];\r\n    },\r\n    addTodo(e, newTodoItem) {\r\n      /*       if (!this.$data.newTodoItem || this.$data.newTodoItem.length === 0) {\r\n        this.$data.showModal = true;\r\n        return;\r\n      } */\r\n\r\n      const ids = this.$data.todoItems.map((item) => {\r\n        return item.id;\r\n      });\r\n\r\n      const maxId = ids.reduce((pvalue, cvalue) => {\r\n        if (pvalue > cvalue) return pvalue;\r\n        return cvalue;\r\n      }, 0);\r\n\r\n      const newTodo = {\r\n        id: maxId + 1,\r\n        todo: newTodoItem,\r\n        done: false,\r\n      };\r\n\r\n      this.$data.todoItems = [...this.$data.todoItems, newTodo];\r\n    },\r\n    doneToggle(e, id) {\r\n      this.$data.todoItems = this.$data.todoItems.map((item) => {\r\n        if (item.id === id) {\r\n          item.done = !item.done;\r\n        }\r\n        return item;\r\n      });\r\n    },\r\n    removeTodo(id) {\r\n      /* e.stopPropagation();\r\n      e.preventDefault(); */\r\n      this.$data.todoItems = this.$data.todoItems.filter(\r\n        (item) => item.id !== id,\r\n      );\r\n    },\r\n  },\r\n  components: {\r\n    /* 전역 컴포넌트인 경우는 등록하지 않는다. 전역 컴포넌트는 프로토타입 체인으로 찾을 수 있기 때문에 */\r\n    /* 지역 컴포넌트나 파일 컴포넌트만 등록 한다. 예시) \"태그명\" : 컴포넌트명 */\r\n    TodoHeader: TodoHeader,\r\n    TodoFooter: TodoFooter,\r\n    TodoInput: TodoInput,\r\n    TodoList: TodoList,\r\n  },\r\n  computed: {\r\n    /* 자동처리 + 동기식. 메서드로 작성. return 필수. data 와 공존 불가 */\r\n    /* vuex 를 사용하는 경우\r\n      mapGetters 는 store의 getters 를 가져오는 헬퍼메서드입니다.\r\n      namespaced: true를 설정한 경우 네임스페이스를 사용하기 때문에 store의 모듈 명을 적어주어야 합니다.\r\n      store 모듈에서 getters 를 가져오는 2가지 방식\r\n      1) store.모듈명.getters 이름 바꾸어 사용하기\r\n         ...mapGetters('모듈명', { get게터명1: '게터명1', get게터명2: '게터명2' }),\r\n      2) store.모듈명.getters 이름 그대로 사용하기(추천방식)\r\n         ...mapGetters('모듈명', ['게터명1', '게터명2']),\r\n      */\r\n  },\r\n  watch: {\r\n    /* 자동처리 + 비동기식. data 에 등록된 프로퍼티(변수) 모니터링. 메서드로 작성. 매개변수 필수. 외부 api 호출을 위해서 사용 */\r\n  },\r\n  created() {\r\n    console.log('created');\r\n  },\r\n  mounted() {\r\n    console.log('mounted');\r\n    /* store의 actions 호출 */\r\n    // this.$store.dispatch('액션명', payload);\r\n  },\r\n  updated() {\r\n    console.log('updated');\r\n  },\r\n};\r\n</script>\r\n","<style scoped></style>\r\n\r\n<template>\r\n  <header>\r\n    <h1>TODO it! (Component)</h1>\r\n  </header>\r\n</template>\r\n\r\n<script>\r\n// vuex 라이브러리에서 mapActions, mapMutations, mapState, mapGetters 함를 가져옵니다.\r\n// import { mapActions, mapMutations, mapState, mapGetters } from 'vuex';\r\n\r\nexport default {\r\n  /* pdtmc^2w */\r\n  props: [],\r\n  data() {\r\n    /* 컴포넌트 안에서 사용되는 변수 등록. 개별 변수 */\r\n    return {};\r\n  },\r\n  //template: ``,\r\n  methods: {\r\n    /* 이벤트 핸들러 등록 + 일반 함수 */\r\n    /* vuex 를 사용하는 경우\r\n      mapActions 는 store의 actions 를 가져오는 헬퍼 메서드입니다.\r\n      namespaced: true를 설정한 경우 네임스페이스를 사용하기 때문에 store의 모듈 명을 적어주어야 합니다.\r\n      store 모듈에서 actions 를 가져오는 2가지 방식\r\n      1) store.모듈명.actions 이름 바꾸어 사용하기(추천방식)\r\n         ...mapActions('모듈명', { dispatch액션명1: '액션명1', dispatch액션명2: '액션명2' }),\r\n      2) store.모듈명.actions 이름 그대로 사용하기\r\n         ...mapActions('모듈명', ['액션명1', '액션명2']),\r\n      */\r\n  },\r\n  components: {\r\n    /* 전역 컴포넌트인 경우는 등록하지 않는다. 전역 컴포넌트는 프로토타입 체인으로 찾을 수 있기 때문에 */\r\n    /* 지역 컴포넌트나 파일 컴포넌트만 등록 한다. 예시) \"태그명\" : 컴포넌트명 */\r\n  },\r\n  computed: {\r\n    /* 자동처리 + 동기식. 메서드로 작성. return 필수. data 와 공존 불가 */\r\n    /* vuex 를 사용하는 경우\r\n      mapGetters 는 store의 getters 를 가져오는 헬퍼메서드입니다.\r\n      namespaced: true를 설정한 경우 네임스페이스를 사용하기 때문에 store의 모듈 명을 적어주어야 합니다.\r\n      store 모듈에서 getters 를 가져오는 2가지 방식\r\n      1) store.모듈명.getters 이름 바꾸어 사용하기\r\n         ...mapGetters('모듈명', { get게터명1: '게터명1', get게터명2: '게터명2' }),\r\n      2) store.모듈명.getters 이름 그대로 사용하기(추천방식)\r\n         ...mapGetters('모듈명', ['게터명1', '게터명2']),\r\n      */\r\n  },\r\n  watch: {\r\n    /* 자동처리 + 비동기식. data 에 등록된 프로퍼티(변수) 모니터링. 메서드로 작성. 매개변수 필수. 외부 api 호출을 위해서 사용 */\r\n  },\r\n  created() {\r\n    console.log('created');\r\n  },\r\n  mounted() {\r\n    console.log('mounted');\r\n    /* store의 actions 호출 */\r\n    // this.$store.dispatch('액션명', payload);\r\n  },\r\n  updated() {\r\n    console.log('updated');\r\n  },\r\n};\r\n</script>\r\n","import { render } from \"./TodoHeader.vue?vue&type=template&id=a3804642\"\nimport script from \"./TodoHeader.vue?vue&type=script&lang=js\"\nexport * from \"./TodoHeader.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<style scoped>\r\n.clearAllContainer {\r\n  width: 8.5rem;\r\n  height: 50px;\r\n  line-height: 50px;\r\n  background-color: white;\r\n  border-radius: 5px;\r\n  margin: 0 auto;\r\n}\r\n\r\n.clearAllBtn {\r\n  color: #e20303;\r\n  display: block;\r\n}\r\n</style>\r\n\r\n<template>\r\n  <div class=\"clearAllContainer\">\r\n    <span class=\"clearAllBtn\" v-on:click=\"clickAll\">Clear All (Component)</span>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n// vuex 라이브러리에서 mapActions, mapMutations, mapState, mapGetters 함를 가져옵니다.\r\n// import { mapActions, mapMutations, mapState, mapGetters } from 'vuex';\r\n\r\nexport default {\r\n  /* pdtmc^2w */\r\n  props: [],\r\n  data() {\r\n    /* 컴포넌트 안에서 사용되는 변수 등록. 개별 변수 */\r\n    return {};\r\n  },\r\n  //template: ``,\r\n  methods: {\r\n    /* 이벤트 핸들러 등록 + 일반 함수 */\r\n    /* vuex 를 사용하는 경우\r\n      mapActions 는 store의 actions 를 가져오는 헬퍼 메서드입니다.\r\n      namespaced: true를 설정한 경우 네임스페이스를 사용하기 때문에 store의 모듈 명을 적어주어야 합니다.\r\n      store 모듈에서 actions 를 가져오는 2가지 방식\r\n      1) store.모듈명.actions 이름 바꾸어 사용하기(추천방식)\r\n         ...mapActions('모듈명', { dispatch액션명1: '액션명1', dispatch액션명2: '액션명2' }),\r\n      2) store.모듈명.actions 이름 그대로 사용하기\r\n         ...mapActions('모듈명', ['액션명1', '액션명2']),\r\n      */\r\n    clickAll(e) {\r\n      console.log(e.target);\r\n\r\n      // 부모 컴포넌트에게 clearAll 이벤트 발생시킨다.\r\n      this.$emit('clearAll', e);\r\n    },\r\n  },\r\n  components: {\r\n    /* 전역 컴포넌트인 경우는 등록하지 않는다. 전역 컴포넌트는 프로토타입 체인으로 찾을 수 있기 때문에 */\r\n    /* 지역 컴포넌트나 파일 컴포넌트만 등록 한다. 예시) \"태그명\" : 컴포넌트명 */\r\n  },\r\n  computed: {\r\n    /* 자동처리 + 동기식. 메서드로 작성. return 필수. data 와 공존 불가 */\r\n    /* vuex 를 사용하는 경우\r\n      mapGetters 는 store의 getters 를 가져오는 헬퍼메서드입니다.\r\n      namespaced: true를 설정한 경우 네임스페이스를 사용하기 때문에 store의 모듈 명을 적어주어야 합니다.\r\n      store 모듈에서 getters 를 가져오는 2가지 방식\r\n      1) store.모듈명.getters 이름 바꾸어 사용하기\r\n         ...mapGetters('모듈명', { get게터명1: '게터명1', get게터명2: '게터명2' }),\r\n      2) store.모듈명.getters 이름 그대로 사용하기(추천방식)\r\n         ...mapGetters('모듈명', ['게터명1', '게터명2']),\r\n      */\r\n  },\r\n  watch: {\r\n    /* 자동처리 + 비동기식. data 에 등록된 프로퍼티(변수) 모니터링. 메서드로 작성. 매개변수 필수. 외부 api 호출을 위해서 사용 */\r\n  },\r\n  created() {\r\n    console.log('created');\r\n  },\r\n  mounted() {\r\n    console.log('mounted');\r\n    /* store의 actions 호출 */\r\n    // this.$store.dispatch('액션명', payload);\r\n  },\r\n  updated() {\r\n    console.log('updated');\r\n  },\r\n};\r\n</script>\r\n","import { render } from \"./TodoFooter.vue?vue&type=template&id=7b411d9e&scoped=true\"\nimport script from \"./TodoFooter.vue?vue&type=script&lang=js\"\nexport * from \"./TodoFooter.vue?vue&type=script&lang=js\"\n\nimport \"./TodoFooter.vue?vue&type=style&index=0&id=7b411d9e&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-7b411d9e\"]])\n\nexport default __exports__","<style scoped>\r\n.shadow {\r\n  box-shadow: 5px 10px 10px rgba(0, 0, 0, 0.03);\r\n}\r\n\r\nh1 {\r\n  color: #2f3b52;\r\n  font-weight: 900;\r\n  margin: 2.5rem 0 1.5rem;\r\n}\r\n\r\ninput:focus {\r\n  outline: none;\r\n}\r\n\r\n.inputBox {\r\n  background: white;\r\n  height: 50px;\r\n  line-height: 50px;\r\n  border-radius: 5px;\r\n}\r\n\r\n.inputBox input {\r\n  border-style: none;\r\n  font-size: 0.9rem;\r\n}\r\n\r\n.addContainer {\r\n  float: right;\r\n  background: linear-gradient(to right, #6478fb, #8763fb);\r\n  display: inline-block;\r\n  width: 3rem;\r\n  border-radius: 0 5px 5px 0;\r\n}\r\n\r\n.addBtn {\r\n  color: white;\r\n  vertical-align: middle;\r\n}\r\n\r\n.closeModalBtn {\r\n  color: #62acde;\r\n}\r\n\r\n.modal-mask {\r\n  position: fixed;\r\n  z-index: 9998;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  height: 100%;\r\n  background-color: rgba(0, 0, 0, 0.5);\r\n  display: table;\r\n  transition: opacity 0.3s ease;\r\n}\r\n\r\n.modal-wrapper {\r\n  display: table-cell;\r\n  vertical-align: middle;\r\n}\r\n\r\n.modal-container {\r\n  width: 300px;\r\n  margin: 0px auto;\r\n  padding: 20px 30px;\r\n  background-color: #fff;\r\n  border-radius: 2px;\r\n  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.33);\r\n  transition: all 0.3s ease;\r\n  font-family: Helvetica, Arial, sans-serif;\r\n}\r\n\r\n.modal-header h3 {\r\n  margin-top: 0;\r\n  color: #62acde;\r\n}\r\n\r\n.modal-body {\r\n  margin: 20px 0;\r\n}\r\n\r\n.modal-default-button {\r\n  float: right;\r\n}\r\n\r\n.modal-enter {\r\n  opacity: 0;\r\n}\r\n\r\n.modal-leave-active {\r\n  opacity: 0;\r\n}\r\n\r\n.modal-enter .modal-container,\r\n.modal-leave-active .modal-container {\r\n  -webkit-transform: scale(1.1);\r\n  transform: scale(1.1);\r\n}\r\n</style>\r\n\r\n<template>\r\n  <div class=\"inputBox shadow\">\r\n    <input\r\n      type=\"text\"\r\n      placeholder=\"Type what you have to do\"\r\n      v-model=\"newTodoItem\"\r\n      ref=\"refNewTodoItem\"\r\n    />\r\n    <span class=\"addContainer\" v-on:click=\"addTodo\">\r\n      <i aria-hidden=\"true\" class=\"addBtn fas fa-plus\"></i>\r\n    </span>\r\n\r\n    <div\r\n      class=\"modal-mask\"\r\n      v-on:keyup.esc=\"$emit('close')\"\r\n      v-if=\"showModal\"\r\n      v-on:close=\"showModal = false\"\r\n    >\r\n      <div class=\"modal-wrapper\">\r\n        <div class=\"modal-container\">\r\n          <div class=\"modal-header\">\r\n            <h3>경고</h3>\r\n          </div>\r\n\r\n          <div class=\"modal-footer\">\r\n            <span v-on:click=\"showModal = false\">\r\n              할 일을 입력하세요.\r\n              <i class=\"closeModalBtn fas fa-times\" aria-hidden=\"true\"></i>\r\n            </span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n// vuex 라이브러리에서 mapActions, mapMutations, mapState, mapGetters 함를 가져옵니다.\r\n// import { mapActions, mapMutations, mapState, mapGetters } from 'vuex';\r\n\r\nexport default {\r\n  /* pdtmc^2w */\r\n  props: [],\r\n  data() {\r\n    /* 컴포넌트 안에서 사용되는 변수 등록. 개별 변수 */\r\n    return {\r\n      newTodoItem: '',\r\n      showModal: false,\r\n    };\r\n  },\r\n  //template: ``,\r\n  methods: {\r\n    /* 이벤트 핸들러 등록 + 일반 함수 */\r\n    /* vuex 를 사용하는 경우\r\n      mapActions 는 store의 actions 를 가져오는 헬퍼 메서드입니다.\r\n      namespaced: true를 설정한 경우 네임스페이스를 사용하기 때문에 store의 모듈 명을 적어주어야 합니다.\r\n      store 모듈에서 actions 를 가져오는 2가지 방식\r\n      1) store.모듈명.actions 이름 바꾸어 사용하기(추천방식)\r\n         ...mapActions('모듈명', { dispatch액션명1: '액션명1', dispatch액션명2: '액션명2' }),\r\n      2) store.모듈명.actions 이름 그대로 사용하기\r\n         ...mapActions('모듈명', ['액션명1', '액션명2']),\r\n      */\r\n    addTodo(e) {\r\n      console.log(e.target);\r\n      if (!this.$data.newTodoItem || this.$data.newTodoItem.trim().length < 0) {\r\n        this.$refs.refNewTodoItem.focus();\r\n        this.$data.showModal = true;\r\n        return;\r\n      }\r\n      this.$emit('addTodo', e, this.$data.newTodoItem);\r\n      this.$data.newTodoItem = '';\r\n    },\r\n  },\r\n  components: {\r\n    /* 전역 컴포넌트인 경우는 등록하지 않는다. 전역 컴포넌트는 프로토타입 체인으로 찾을 수 있기 때문에 */\r\n    /* 지역 컴포넌트나 파일 컴포넌트만 등록 한다. 예시) \"태그명\" : 컴포넌트명 */\r\n  },\r\n  computed: {\r\n    /* 자동처리 + 동기식. 메서드로 작성. return 필수. data 와 공존 불가 */\r\n    /* vuex 를 사용하는 경우\r\n      mapGetters 는 store의 getters 를 가져오는 헬퍼메서드입니다.\r\n      namespaced: true를 설정한 경우 네임스페이스를 사용하기 때문에 store의 모듈 명을 적어주어야 합니다.\r\n      store 모듈에서 getters 를 가져오는 2가지 방식\r\n      1) store.모듈명.getters 이름 바꾸어 사용하기\r\n         ...mapGetters('모듈명', { get게터명1: '게터명1', get게터명2: '게터명2' }),\r\n      2) store.모듈명.getters 이름 그대로 사용하기(추천방식)\r\n         ...mapGetters('모듈명', ['게터명1', '게터명2']),\r\n      */\r\n  },\r\n  watch: {\r\n    /* 자동처리 + 비동기식. data 에 등록된 프로퍼티(변수) 모니터링. 메서드로 작성. 매개변수 필수. 외부 api 호출을 위해서 사용 */\r\n  },\r\n  created() {\r\n    console.log('created');\r\n  },\r\n  mounted() {\r\n    console.log('mounted');\r\n    /* store의 actions 호출 */\r\n    // this.$store.dispatch('액션명', payload);\r\n  },\r\n  updated() {\r\n    console.log('updated');\r\n  },\r\n};\r\n</script>\r\n","import { render } from \"./TodoInput.vue?vue&type=template&id=4e6ffa9e&scoped=true\"\nimport script from \"./TodoInput.vue?vue&type=script&lang=js\"\nexport * from \"./TodoInput.vue?vue&type=script&lang=js\"\n\nimport \"./TodoInput.vue?vue&type=style&index=0&id=4e6ffa9e&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-4e6ffa9e\"]])\n\nexport default __exports__","<style scoped>\r\ninput {\r\n  border-style: groove;\r\n  width: 200px;\r\n}\r\n\r\nbutton {\r\n  border-style: groove;\r\n}\r\n\r\nul {\r\n  list-style-type: none;\r\n  padding-left: 0px;\r\n  margin-top: 0;\r\n  text-align: left;\r\n}\r\n\r\nli {\r\n  display: flex;\r\n  min-height: 50px;\r\n  height: 50px;\r\n  line-height: 50px;\r\n  margin: 0.5rem 0;\r\n  padding: 0 0.9rem;\r\n  background: white;\r\n  border-radius: 5px;\r\n}\r\n\r\nli.checked {\r\n  background: #bbb;\r\n  color: #fff;\r\n  text-decoration: line-through;\r\n}\r\n\r\n.checkBtn {\r\n  line-height: 45px;\r\n  color: #62acde;\r\n  margin-right: 5px;\r\n}\r\n\r\n.removeBtn {\r\n  margin-left: auto;\r\n  color: #de4343;\r\n}\r\n\r\n.list-enter-active,\r\n.list-leave-active {\r\n  transition: all 1s;\r\n}\r\n\r\n.list-enter,\r\n.list-leave-to {\r\n  opacity: 0;\r\n  transform: translateY(30px);\r\n}\r\n</style>\r\n\r\n<template>\r\n  <!-- \"checked(todoItem.done)\"  <==> \"todoItem.done ? 'checked': null \"  -->\r\n  <section>\r\n    <ul>\r\n      <!-- <li class=\"checked\">\r\n        <i aria-hidden=\"true\" class=\"checkBtn fas fa-check\"></i>\r\n        주말 산책\r\n        <span type=\"button\" class=\"removeBtn\">\r\n          <i aria-hidden=\"true\" class=\"far fa-trash-alt\"></i>\r\n        </span>\r\n      </li> -->\r\n\r\n      <li\r\n        v-for=\"item in todoItems\"\r\n        v-bind:class=\"item.done ? 'checked' : null\"\r\n        v-bind:key=\"item.id\"\r\n        v-bind:data-id=\"item.id\"\r\n        v-on:click=\"() => doneToggle(e, item.id)\"\r\n      >\r\n        <i aria-hidden=\"true\" class=\"checkBtn fas fa-check\"></i>\r\n        {{ item.id }}. {{ item.todo }}\r\n        <span\r\n          type=\"button\"\r\n          class=\"removeBtn\"\r\n          v-bind:data-id=\"item.id\"\r\n          v-on:click.stop=\"removeTodo(item.id)\"\r\n        >\r\n          <i aria-hidden=\"true\" class=\"far fa-trash-alt\"></i>\r\n        </span>\r\n      </li>\r\n    </ul>\r\n  </section>\r\n</template>\r\n\r\n<script>\r\n// vuex 라이브러리에서 mapActions, mapMutations, mapState, mapGetters 함를 가져옵니다.\r\n// import { mapActions, mapMutations, mapState, mapGetters } from 'vuex';\r\n\r\nexport default {\r\n  /* pdtmc^2w */\r\n  props: ['todoItems'],\r\n  data() {\r\n    /* 컴포넌트 안에서 사용되는 변수 등록. 개별 변수 */\r\n    return {};\r\n  },\r\n  //template: ``,\r\n  methods: {\r\n    /* 이벤트 핸들러 등록 + 일반 함수 */\r\n    /* vuex 를 사용하는 경우\r\n      mapActions 는 store의 actions 를 가져오는 헬퍼 메서드입니다.\r\n      namespaced: true를 설정한 경우 네임스페이스를 사용하기 때문에 store의 모듈 명을 적어주어야 합니다.\r\n      store 모듈에서 actions 를 가져오는 2가지 방식\r\n      1) store.모듈명.actions 이름 바꾸어 사용하기(추천방식)\r\n         ...mapActions('모듈명', { dispatch액션명1: '액션명1', dispatch액션명2: '액션명2' }),\r\n      2) store.모듈명.actions 이름 그대로 사용하기\r\n         ...mapActions('모듈명', ['액션명1', '액션명2']),\r\n      */\r\n    doneToggle(e, id) {\r\n      this.$emit('doneToggle', e, id);\r\n    },\r\n    removeTodo(id) {\r\n      this.$emit('removeTodo', id);\r\n    },\r\n  },\r\n  components: {\r\n    /* 전역 컴포넌트인 경우는 등록하지 않는다. 전역 컴포넌트는 프로토타입 체인으로 찾을 수 있기 때문에 */\r\n    /* 지역 컴포넌트나 파일 컴포넌트만 등록 한다. 예시) \"태그명\" : 컴포넌트명 */\r\n  },\r\n  computed: {\r\n    /* 자동처리 + 동기식. 메서드로 작성. return 필수. data 와 공존 불가 */\r\n    /* vuex 를 사용하는 경우\r\n      mapGetters 는 store의 getters 를 가져오는 헬퍼메서드입니다.\r\n      namespaced: true를 설정한 경우 네임스페이스를 사용하기 때문에 store의 모듈 명을 적어주어야 합니다.\r\n      store 모듈에서 getters 를 가져오는 2가지 방식\r\n      1) store.모듈명.getters 이름 바꾸어 사용하기\r\n         ...mapGetters('모듈명', { get게터명1: '게터명1', get게터명2: '게터명2' }),\r\n      2) store.모듈명.getters 이름 그대로 사용하기(추천방식)\r\n         ...mapGetters('모듈명', ['게터명1', '게터명2']),\r\n      */\r\n  },\r\n  watch: {\r\n    /* 자동처리 + 비동기식. data 에 등록된 프로퍼티(변수) 모니터링. 메서드로 작성. 매개변수 필수. 외부 api 호출을 위해서 사용 */\r\n  },\r\n  created() {\r\n    console.log('created');\r\n  },\r\n  mounted() {\r\n    console.log('mounted');\r\n    /* store의 actions 호출 */\r\n    // this.$store.dispatch('액션명', payload);\r\n  },\r\n  updated() {\r\n    console.log('updated');\r\n  },\r\n};\r\n</script>\r\n","import { render } from \"./TodoList.vue?vue&type=template&id=d6cf7114&scoped=true\"\nimport script from \"./TodoList.vue?vue&type=script&lang=js\"\nexport * from \"./TodoList.vue?vue&type=script&lang=js\"\n\nimport \"./TodoList.vue?vue&type=style&index=0&id=d6cf7114&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-d6cf7114\"]])\n\nexport default __exports__","import { render } from \"./TodoView.vue?vue&type=template&id=7a174987\"\nimport script from \"./TodoView.vue?vue&type=script&lang=js\"\nexport * from \"./TodoView.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<style scoped></style>\r\n\r\n<template>\r\n  <div id=\"app\">\r\n    <p>\r\n      <button v-on:click=\"clickAddBox\">박스 추가</button>\r\n    </p>\r\n    <p>\r\n      <b v-for=\"(val, i) in arr\" v-bind:key=\"i\">\r\n        {{ val }}\r\n        <Vue3104Counter v-bind:num=\"val\"></Vue3104Counter>\r\n      </b>\r\n    </p>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n// vuex 라이브러리에서 mapActions, mapMutations, mapState, mapGetters 함를 가져옵니다.\r\n// import { mapActions, mapMutations, mapState, mapGetters } from 'vuex';\r\nimport Vue3104Counter from '../components/vue3104/Vue3104Counter';\r\nexport default {\r\n  /* pdtmc^2w */\r\n  props: [],\r\n  data() {\r\n    /* 컴포넌트 안에서 사용되는 변수 등록. 개별 변수 */\r\n    return { arr: [1, 2, 3, 4] };\r\n  },\r\n  //template: ``,\r\n  methods: {\r\n    /* 이벤트 핸들러 등록 + 일반 함수 */\r\n    /* vuex 를 사용하는 경우\r\n      mapActions 는 store의 actions 를 가져오는 헬퍼 메서드입니다.\r\n      namespaced: true를 설정한 경우 네임스페이스를 사용하기 때문에 store의 모듈 명을 적어주어야 합니다.\r\n      store 모듈에서 actions 를 가져오는 2가지 방식\r\n      1) store.모듈명.actions 이름 바꾸어 사용하기(추천방식)\r\n         ...mapActions('모듈명', { dispatch액션명1: '액션명1', dispatch액션명2: '액션명2' }),\r\n      2) store.모듈명.actions 이름 그대로 사용하기\r\n         ...mapActions('모듈명', ['액션명1', '액션명2']),\r\n      */\r\n    clickAddBox(e) {\r\n      this.$data.arr.push(this.$data.arr.length + 1);\r\n      console.log(e.target);\r\n    },\r\n  },\r\n  components: {\r\n    /* 전역 컴포넌트인 경우는 등록하지 않는다. 전역 컴포넌트는 프로토타입 체인으로 찾을 수 있기 때문에 */\r\n    /* 지역 컴포넌트나 파일 컴포넌트만 등록 한다. 예시) \"태그명\" : 컴포넌트명 */\r\n    Vue3104Counter: Vue3104Counter,\r\n  },\r\n  computed: {\r\n    /* 자동처리 + 동기식. 메서드로 작성. return 필수. data 와 공존 불가 */\r\n    /* vuex 를 사용하는 경우\r\n      mapGetters 는 store의 getters 를 가져오는 헬퍼메서드입니다.\r\n      namespaced: true를 설정한 경우 네임스페이스를 사용하기 때문에 store의 모듈 명을 적어주어야 합니다.\r\n      store 모듈에서 getters 를 가져오는 2가지 방식\r\n      1) store.모듈명.getters 이름 바꾸어 사용하기\r\n         ...mapGetters('모듈명', { get게터명1: '게터명1', get게터명2: '게터명2' }),\r\n      2) store.모듈명.getters 이름 그대로 사용하기(추천방식)\r\n         ...mapGetters('모듈명', ['게터명1', '게터명2']),\r\n      */\r\n  },\r\n  watch: {\r\n    /* 자동처리 + 비동기식. data 에 등록된 프로퍼티(변수) 모니터링. 메서드로 작성. 매개변수 필수. 외부 api 호출을 위해서 사용 */\r\n  },\r\n  created() {\r\n    console.log('created');\r\n  },\r\n  mounted() {\r\n    console.log('mounted');\r\n    /* store의 actions 호출 */\r\n    // this.$store.dispatch('액션명', payload);\r\n  },\r\n  updated() {\r\n    console.log('updated');\r\n  },\r\n};\r\n</script>\r\n","<style scoped></style>\r\n\r\n<template>\r\n  <span\r\n    style=\"\r\n      display: inline-block;\r\n      font-size: 3em;\r\n      border: 1px dashed blue;\r\n      padding: 10px 20px;\r\n      margin: 5px;\r\n      text-align: center;\r\n    \"\r\n  >\r\n    {{ num }}\r\n  </span>\r\n</template>\r\n\r\n<script>\r\n// vuex 라이브러리에서 mapActions, mapMutations, mapState, mapGetters 함를 가져옵니다.\r\n// import { mapActions, mapMutations, mapState, mapGetters } from 'vuex';\r\n\r\nexport default {\r\n  /* pdtmc^2w */\r\n  props: ['num'],\r\n  data() {\r\n    /* 컴포넌트 안에서 사용되는 변수 등록. 개별 변수 */\r\n    return {};\r\n  },\r\n  //template: ``,\r\n  methods: {\r\n    /* 이벤트 핸들러 등록 + 일반 함수 */\r\n    /* vuex 를 사용하는 경우\r\n      mapActions 는 store의 actions 를 가져오는 헬퍼 메서드입니다.\r\n      namespaced: true를 설정한 경우 네임스페이스를 사용하기 때문에 store의 모듈 명을 적어주어야 합니다.\r\n      store 모듈에서 actions 를 가져오는 2가지 방식\r\n      1) store.모듈명.actions 이름 바꾸어 사용하기(추천방식)\r\n         ...mapActions('모듈명', { dispatch액션명1: '액션명1', dispatch액션명2: '액션명2' }),\r\n      2) store.모듈명.actions 이름 그대로 사용하기\r\n         ...mapActions('모듈명', ['액션명1', '액션명2']),\r\n      */\r\n  },\r\n  components: {\r\n    /* 전역 컴포넌트인 경우는 등록하지 않는다. 전역 컴포넌트는 프로토타입 체인으로 찾을 수 있기 때문에 */\r\n    /* 지역 컴포넌트나 파일 컴포넌트만 등록 한다. 예시) \"태그명\" : 컴포넌트명 */\r\n  },\r\n  computed: {\r\n    /* 자동처리 + 동기식. 메서드로 작성. return 필수. data 와 공존 불가 */\r\n    /* vuex 를 사용하는 경우\r\n      mapGetters 는 store의 getters 를 가져오는 헬퍼메서드입니다.\r\n      namespaced: true를 설정한 경우 네임스페이스를 사용하기 때문에 store의 모듈 명을 적어주어야 합니다.\r\n      store 모듈에서 getters 를 가져오는 2가지 방식\r\n      1) store.모듈명.getters 이름 바꾸어 사용하기\r\n         ...mapGetters('모듈명', { get게터명1: '게터명1', get게터명2: '게터명2' }),\r\n      2) store.모듈명.getters 이름 그대로 사용하기(추천방식)\r\n         ...mapGetters('모듈명', ['게터명1', '게터명2']),\r\n      */\r\n  },\r\n  watch: {\r\n    /* 자동처리 + 비동기식. data 에 등록된 프로퍼티(변수) 모니터링. 메서드로 작성. 매개변수 필수. 외부 api 호출을 위해서 사용 */\r\n  },\r\n  created() {\r\n    console.log('created');\r\n  },\r\n  mounted() {\r\n    console.log('mounted');\r\n    /* store의 actions 호출 */\r\n    // this.$store.dispatch('액션명', payload);\r\n  },\r\n  updated() {\r\n    console.log('updated');\r\n  },\r\n};\r\n</script>\r\n","import { render } from \"./Vue3104Counter.vue?vue&type=template&id=3e57e4f6\"\nimport script from \"./Vue3104Counter.vue?vue&type=script&lang=js\"\nexport * from \"./Vue3104Counter.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import { render } from \"./Vue3104View.vue?vue&type=template&id=2d1c2738\"\nimport script from \"./Vue3104View.vue?vue&type=script&lang=js\"\nexport * from \"./Vue3104View.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<style scoped></style>\r\n\r\n<template>\r\n  <div id=\"app\">\r\n    <h2>컴포넌트 등록</h2>\r\n    <Vue3103Comp v-bind:localmsg=\"localmsg1\"></Vue3103Comp>\r\n    <Vue3103Comp v-bind:localmsg=\"localmsg2\"></Vue3103Comp>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n// vuex 라이브러리에서 mapActions, mapMutations, mapState, mapGetters 함를 가져옵니다.\r\n// import { mapActions, mapMutations, mapState, mapGetters } from 'vuex';\r\nimport Vue3103Comp from '../components/vue3103/Vue3103Comp';\r\n\r\nexport default {\r\n  /* pdtmc^2w */\r\n  props: [],\r\n  data() {\r\n    /* 컴포넌트 안에서 사용되는 변수 등록. 개별 변수 */\r\n\r\n    return {\r\n      localmsg1: '부모에서 자식으로 넘겨진 메시지1',\r\n      localmsg2: '부모에서 자식으로 넘겨진 메시지2',\r\n    };\r\n  },\r\n  //template: ``,\r\n  methods: {\r\n    /* 이벤트 핸들러 등록 + 일반 함수 */\r\n    /* vuex 를 사용하는 경우\r\n      mapActions 는 store의 actions 를 가져오는 헬퍼 메서드입니다.\r\n      namespaced: true를 설정한 경우 네임스페이스를 사용하기 때문에 store의 모듈 명을 적어주어야 합니다.\r\n      store 모듈에서 actions 를 가져오는 2가지 방식\r\n      1) store.모듈명.actions 이름 바꾸어 사용하기(추천방식)\r\n         ...mapActions('모듈명', { dispatch액션명1: '액션명1', dispatch액션명2: '액션명2' }),\r\n      2) store.모듈명.actions 이름 그대로 사용하기\r\n         ...mapActions('모듈명', ['액션명1', '액션명2']),\r\n      */\r\n  },\r\n  components: {\r\n    /* 전역 컴포넌트인 경우는 등록하지 않는다. 전역 컴포넌트는 프로토타입 체인으로 찾을 수 있기 때문에 */\r\n    /* 지역 컴포넌트나 파일 컴포넌트만 등록 한다. 예시) \"태그명\" : 컴포넌트명 */\r\n    Vue3103Comp: Vue3103Comp,\r\n  },\r\n  computed: {\r\n    /* 자동처리 + 동기식. 메서드로 작성. return 필수. data 와 공존 불가 */\r\n    /* vuex 를 사용하는 경우\r\n      mapGetters 는 store의 getters 를 가져오는 헬퍼메서드입니다.\r\n      namespaced: true를 설정한 경우 네임스페이스를 사용하기 때문에 store의 모듈 명을 적어주어야 합니다.\r\n      store 모듈에서 getters 를 가져오는 2가지 방식\r\n      1) store.모듈명.getters 이름 바꾸어 사용하기\r\n         ...mapGetters('모듈명', { get게터명1: '게터명1', get게터명2: '게터명2' }),\r\n      2) store.모듈명.getters 이름 그대로 사용하기(추천방식)\r\n         ...mapGetters('모듈명', ['게터명1', '게터명2']),\r\n      */\r\n  },\r\n  watch: {\r\n    /* 자동처리 + 비동기식. data 에 등록된 프로퍼티(변수) 모니터링. 메서드로 작성. 매개변수 필수. 외부 api 호출을 위해서 사용 */\r\n  },\r\n  created() {\r\n    console.log('created');\r\n  },\r\n  mounted() {\r\n    console.log('mounted');\r\n    /* store의 actions 호출 */\r\n    // this.$store.dispatch('액션명', payload);\r\n  },\r\n  updated() {\r\n    console.log('updated');\r\n  },\r\n};\r\n</script>\r\n","<style scoped>\r\nspan {\r\n  border: 1px dashed blue;\r\n  background-color: lightgray;\r\n  padding: 5px;\r\n}\r\n</style>\r\n\r\n<template>\r\n  <div>\r\n    파일 컴포넌트가 등록되었습니다!\r\n    <span v-on:click=\"lclick\">\r\n      {{ localmsg }}\r\n    </span>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n// vuex 라이브러리에서 mapActions, mapMutations, mapState, mapGetters 함를 가져옵니다.\r\n// import { mapActions, mapMutations, mapState, mapGetters } from 'vuex';\r\n\r\nexport default {\r\n  /* pdtmc^2w */\r\n  props: ['localmsg'],\r\n  data() {\r\n    /* 컴포넌트 안에서 사용되는 변수 등록. 개별 변수 */\r\n    return {};\r\n  },\r\n  //template: ``,\r\n  methods: {\r\n    /* 이벤트 핸들러 등록 + 일반 함수 */\r\n    /* vuex 를 사용하는 경우\r\n      mapActions 는 store의 actions 를 가져오는 헬퍼 메서드입니다.\r\n      namespaced: true를 설정한 경우 네임스페이스를 사용하기 때문에 store의 모듈 명을 적어주어야 합니다.\r\n      store 모듈에서 actions 를 가져오는 2가지 방식\r\n      1) store.모듈명.actions 이름 바꾸어 사용하기(추천방식)\r\n         ...mapActions('모듈명', { dispatch액션명1: '액션명1', dispatch액션명2: '액션명2' }),\r\n      2) store.모듈명.actions 이름 그대로 사용하기\r\n         ...mapActions('모듈명', ['액션명1', '액션명2']),\r\n      */\r\n    lclick(e) {\r\n      console.log(e.target);\r\n    },\r\n  },\r\n  components: {\r\n    /* 전역 컴포넌트인 경우는 등록하지 않는다. 전역 컴포넌트는 프로토타입 체인으로 찾을 수 있기 때문에 */\r\n    /* 지역 컴포넌트나 파일 컴포넌트만 등록 한다. 예시) \"태그명\" : 컴포넌트명 */\r\n  },\r\n  computed: {\r\n    /* 자동처리 + 동기식. 메서드로 작성. return 필수. data 와 공존 불가 */\r\n    /* vuex 를 사용하는 경우\r\n      mapGetters 는 store의 getters 를 가져오는 헬퍼메서드입니다.\r\n      namespaced: true를 설정한 경우 네임스페이스를 사용하기 때문에 store의 모듈 명을 적어주어야 합니다.\r\n      store 모듈에서 getters 를 가져오는 2가지 방식\r\n      1) store.모듈명.getters 이름 바꾸어 사용하기\r\n         ...mapGetters('모듈명', { get게터명1: '게터명1', get게터명2: '게터명2' }),\r\n      2) store.모듈명.getters 이름 그대로 사용하기(추천방식)\r\n         ...mapGetters('모듈명', ['게터명1', '게터명2']),\r\n      */\r\n  },\r\n  watch: {\r\n    /* 자동처리 + 비동기식. data 에 등록된 프로퍼티(변수) 모니터링. 메서드로 작성. 매개변수 필수. 외부 api 호출을 위해서 사용 */\r\n  },\r\n  created() {\r\n    console.log('created');\r\n  },\r\n  mounted() {\r\n    console.log('mounted');\r\n    /* store의 actions 호출 */\r\n    // this.$store.dispatch('액션명', payload);\r\n  },\r\n  updated() {\r\n    console.log('updated');\r\n  },\r\n};\r\n</script>\r\n","import { render } from \"./Vue3103Comp.vue?vue&type=template&id=7c055162&scoped=true\"\nimport script from \"./Vue3103Comp.vue?vue&type=script&lang=js\"\nexport * from \"./Vue3103Comp.vue?vue&type=script&lang=js\"\n\nimport \"./Vue3103Comp.vue?vue&type=style&index=0&id=7c055162&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-7c055162\"]])\n\nexport default __exports__","import { render } from \"./Vue31exView.vue?vue&type=template&id=4869a1d9\"\nimport script from \"./Vue31exView.vue?vue&type=script&lang=js\"\nexport * from \"./Vue31exView.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<style scoped></style>\r\n\r\n<template>\r\n  <div id=\"app\">\r\n    자식 컴포넌트에서 받은 값: {{ mesg }}\r\n    <Vue3403Comp v-on:showLog=\"printText\"></Vue3403Comp>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n// vuex 라이브러리에서 mapActions, mapMutations, mapState, mapGetters 함를 가져옵니다.\r\n// import { mapActions, mapMutations, mapState, mapGetters } from 'vuex';\r\nimport Vue3403Comp from '../components/vue3403/Vue3403Comp';\r\nexport default {\r\n  /* pdtmc^2w */\r\n  props: [],\r\n  data() {\r\n    /* 컴포넌트 안에서 사용되는 변수 등록. 개별 변수 */\r\n    return { mesg: null };\r\n  },\r\n  //template: ``,\r\n  methods: {\r\n    /* 이벤트 핸들러 등록 + 일반 함수 */\r\n    /* vuex 를 사용하는 경우\r\n      mapActions 는 store의 actions 를 가져오는 헬퍼 메서드입니다.\r\n      namespaced: true를 설정한 경우 네임스페이스를 사용하기 때문에 store의 모듈 명을 적어주어야 합니다.\r\n      store 모듈에서 actions 를 가져오는 2가지 방식\r\n      1) store.모듈명.actions 이름 바꾸어 사용하기(추천방식)\r\n         ...mapActions('모듈명', { dispatch액션명1: '액션명1', dispatch액션명2: '액션명2' }),\r\n      2) store.모듈명.actions 이름 그대로 사용하기\r\n         ...mapActions('모듈명', ['액션명1', '액션명2']),\r\n      */\r\n    printText(param1, param2) {\r\n      debugger;\r\n      console.log('param1', param1);\r\n      console.log('param2', param2);\r\n      this.$data.mesg = `param1=${param1}, param2=${param2}`;\r\n    },\r\n  },\r\n  components: {\r\n    /* 전역 컴포넌트인 경우는 등록하지 않는다. 전역 컴포넌트는 프로토타입 체인으로 찾을 수 있기 때문에 */\r\n    /* 지역 컴포넌트나 파일 컴포넌트만 등록 한다. 예시) \"태그명\" : 컴포넌트명 */\r\n    Vue3403Comp: Vue3403Comp,\r\n  },\r\n  computed: {\r\n    /* 자동처리 + 동기식. 메서드로 작성. return 필수. data 와 공존 불가 */\r\n    /* vuex 를 사용하는 경우\r\n      mapGetters 는 store의 getters 를 가져오는 헬퍼메서드입니다.\r\n      namespaced: true를 설정한 경우 네임스페이스를 사용하기 때문에 store의 모듈 명을 적어주어야 합니다.\r\n      store 모듈에서 getters 를 가져오는 2가지 방식\r\n      1) store.모듈명.getters 이름 바꾸어 사용하기\r\n         ...mapGetters('모듈명', { get게터명1: '게터명1', get게터명2: '게터명2' }),\r\n      2) store.모듈명.getters 이름 그대로 사용하기(추천방식)\r\n         ...mapGetters('모듈명', ['게터명1', '게터명2']),\r\n      */\r\n  },\r\n  watch: {\r\n    /* 자동처리 + 비동기식. data 에 등록된 프로퍼티(변수) 모니터링. 메서드로 작성. 매개변수 필수. 외부 api 호출을 위해서 사용 */\r\n  },\r\n  created() {\r\n    console.log('created');\r\n  },\r\n  mounted() {\r\n    console.log('mounted');\r\n    /* store의 actions 호출 */\r\n    // this.$store.dispatch('액션명', payload);\r\n  },\r\n  updated() {\r\n    console.log('updated');\r\n  },\r\n};\r\n</script>\r\n","<style scoped></style>\r\n\r\n<template>\r\n  <div>\r\n    <button v-on:click=\"showLog\">show</button>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n// vuex 라이브러리에서 mapActions, mapMutations, mapState, mapGetters 함를 가져옵니다.\r\n// import { mapActions, mapMutations, mapState, mapGetters } from 'vuex';\r\n\r\nexport default {\r\n  /* pdtmc^2w */\r\n  props: [],\r\n  data() {\r\n    /* 컴포넌트 안에서 사용되는 변수 등록. 개별 변수 */\r\n    return {};\r\n  },\r\n  //template: ``,\r\n  methods: {\r\n    /* 이벤트 핸들러 등록 + 일반 함수 */\r\n    /* vuex 를 사용하는 경우\r\n      mapActions 는 store의 actions 를 가져오는 헬퍼 메서드입니다.\r\n      namespaced: true를 설정한 경우 네임스페이스를 사용하기 때문에 store의 모듈 명을 적어주어야 합니다.\r\n      store 모듈에서 actions 를 가져오는 2가지 방식\r\n      1) store.모듈명.actions 이름 바꾸어 사용하기(추천방식)\r\n         ...mapActions('모듈명', { dispatch액션명1: '액션명1', dispatch액션명2: '액션명2' }),\r\n      2) store.모듈명.actions 이름 그대로 사용하기\r\n         ...mapActions('모듈명', ['액션명1', '액션명2']),\r\n      */\r\n    showLog(e) {\r\n      debugger;\r\n      console.log(e.target);\r\n      this.$emit('showLog', 'aaa', 123);\r\n    },\r\n  },\r\n  components: {\r\n    /* 전역 컴포넌트인 경우는 등록하지 않는다. 전역 컴포넌트는 프로토타입 체인으로 찾을 수 있기 때문에 */\r\n    /* 지역 컴포넌트나 파일 컴포넌트만 등록 한다. 예시) \"태그명\" : 컴포넌트명 */\r\n  },\r\n  computed: {\r\n    /* 자동처리 + 동기식. 메서드로 작성. return 필수. data 와 공존 불가 */\r\n    /* vuex 를 사용하는 경우\r\n      mapGetters 는 store의 getters 를 가져오는 헬퍼메서드입니다.\r\n      namespaced: true를 설정한 경우 네임스페이스를 사용하기 때문에 store의 모듈 명을 적어주어야 합니다.\r\n      store 모듈에서 getters 를 가져오는 2가지 방식\r\n      1) store.모듈명.getters 이름 바꾸어 사용하기\r\n         ...mapGetters('모듈명', { get게터명1: '게터명1', get게터명2: '게터명2' }),\r\n      2) store.모듈명.getters 이름 그대로 사용하기(추천방식)\r\n         ...mapGetters('모듈명', ['게터명1', '게터명2']),\r\n      */\r\n  },\r\n  watch: {\r\n    /* 자동처리 + 비동기식. data 에 등록된 프로퍼티(변수) 모니터링. 메서드로 작성. 매개변수 필수. 외부 api 호출을 위해서 사용 */\r\n  },\r\n  created() {\r\n    console.log('created');\r\n  },\r\n  mounted() {\r\n    console.log('mounted');\r\n    /* store의 actions 호출 */\r\n    // this.$store.dispatch('액션명', payload);\r\n  },\r\n  updated() {\r\n    console.log('updated');\r\n  },\r\n};\r\n</script>\r\n","import { render } from \"./Vue3403Comp.vue?vue&type=template&id=2ff73436\"\nimport script from \"./Vue3403Comp.vue?vue&type=script&lang=js\"\nexport * from \"./Vue3403Comp.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import { render } from \"./Vue3403View.vue?vue&type=template&id=92a997fe\"\nimport script from \"./Vue3403View.vue?vue&type=script&lang=js\"\nexport * from \"./Vue3403View.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<style scoped></style>\r\n\r\n<template>\r\n  <div id=\"app\">\r\n    <Vue34exParent></Vue34exParent>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n// vuex 라이브러리에서 mapActions, mapMutations, mapState, mapGetters 함를 가져옵니다.\r\n// import { mapActions, mapMutations, mapState, mapGetters } from 'vuex';\r\nimport Vue34exParent from '../components/vue34ex/Vue34exParent';\r\nexport default {\r\n  /* pdtmc^2w */\r\n  props: [],\r\n  data() {\r\n    /* 컴포넌트 안에서 사용되는 변수 등록. 개별 변수 */\r\n    return {};\r\n  },\r\n  //template: ``,\r\n  methods: {\r\n    /* 이벤트 핸들러 등록 + 일반 함수 */\r\n    /* vuex 를 사용하는 경우\r\n      mapActions 는 store의 actions 를 가져오는 헬퍼 메서드입니다.\r\n      namespaced: true를 설정한 경우 네임스페이스를 사용하기 때문에 store의 모듈 명을 적어주어야 합니다.\r\n      store 모듈에서 actions 를 가져오는 2가지 방식\r\n      1) store.모듈명.actions 이름 바꾸어 사용하기(추천방식)\r\n         ...mapActions('모듈명', { dispatch액션명1: '액션명1', dispatch액션명2: '액션명2' }),\r\n      2) store.모듈명.actions 이름 그대로 사용하기\r\n         ...mapActions('모듈명', ['액션명1', '액션명2']),\r\n      */\r\n  },\r\n  components: {\r\n    /* 전역 컴포넌트인 경우는 등록하지 않는다. 전역 컴포넌트는 프로토타입 체인으로 찾을 수 있기 때문에 */\r\n    /* 지역 컴포넌트나 파일 컴포넌트만 등록 한다. 예시) \"태그명\" : 컴포넌트명 */\r\n    Vue34exParent: Vue34exParent,\r\n  },\r\n  computed: {\r\n    /* 자동처리 + 동기식. 메서드로 작성. return 필수. data 와 공존 불가 */\r\n    /* vuex 를 사용하는 경우\r\n      mapGetters 는 store의 getters 를 가져오는 헬퍼메서드입니다.\r\n      namespaced: true를 설정한 경우 네임스페이스를 사용하기 때문에 store의 모듈 명을 적어주어야 합니다.\r\n      store 모듈에서 getters 를 가져오는 2가지 방식\r\n      1) store.모듈명.getters 이름 바꾸어 사용하기\r\n         ...mapGetters('모듈명', { get게터명1: '게터명1', get게터명2: '게터명2' }),\r\n      2) store.모듈명.getters 이름 그대로 사용하기(추천방식)\r\n         ...mapGetters('모듈명', ['게터명1', '게터명2']),\r\n      */\r\n  },\r\n  watch: {\r\n    /* 자동처리 + 비동기식. data 에 등록된 프로퍼티(변수) 모니터링. 메서드로 작성. 매개변수 필수. 외부 api 호출을 위해서 사용 */\r\n  },\r\n  created() {\r\n    console.log('created');\r\n  },\r\n  mounted() {\r\n    console.log('mounted');\r\n    /* store의 actions 호출 */\r\n    // this.$store.dispatch('액션명', payload);\r\n  },\r\n  updated() {\r\n    console.log('updated');\r\n  },\r\n};\r\n</script>\r\n","<style scoped>\r\n.component-parent {\r\n  width: 50%;\r\n  background-color: lightblue;\r\n  padding: 5%;\r\n  margin: 0 auto;\r\n}\r\n\r\n.component-child {\r\n  width: 80%;\r\n  background-color: lightgray;\r\n  padding: 5% 0;\r\n  margin: 0 auto;\r\n}\r\n</style>\r\n<template>\r\n  <div id=\"app\" class=\"component-parent\">\r\n    Parent counter : {{ counter }} <br />\r\n    <button name=\"parent\" v-on:click=\"addCounter(+10)\">+</button>\r\n    <button name=\"parent\" v-on:click=\"subCounter(-10)\">-</button>\r\n    <p></p>\r\n\r\n    <!-- Child 컴포넌트를 등록하고 counter 데이터 속성을 props로 전달한다. -->\r\n    <Vue34exChild\r\n      v-bind:num=\"counter\"\r\n      v-on:addCounter=\"addCounter\"\r\n      v-on:subCounter=\"subCounter\"\r\n    >\r\n    </Vue34exChild>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n// vuex 라이브러리에서 mapActions, mapMutations, mapState, mapGetters 함를 가져옵니다.\r\n// import { mapActions, mapMutations, mapState, mapGetters } from 'vuex';\r\nimport Vue34exChild from './Vue34exChild.vue';\r\n\r\nexport default {\r\n  /* pdtmc^2w */\r\n  props: [],\r\n  data() {\r\n    /* 컴포넌트 안에서 사용되는 변수 등록. 개별 변수 */\r\n    return { counter: 0 };\r\n  },\r\n  //template: ``,\r\n  methods: {\r\n    /* 이벤트 핸들러 등록 + 일반 함수 */\r\n    /* vuex 를 사용하는 경우\r\n      mapActions 는 store의 actions 를 가져오는 헬퍼 메서드입니다.\r\n      namespaced: true를 설정한 경우 네임스페이스를 사용하기 때문에 store의 모듈 명을 적어주어야 합니다.\r\n      store 모듈에서 actions 를 가져오는 2가지 방식\r\n      1) store.모듈명.actions 이름 바꾸어 사용하기(추천방식)\r\n         ...mapActions('모듈명', { dispatch액션명1: '액션명1', dispatch액션명2: '액션명2' }),\r\n      2) store.모듈명.actions 이름 그대로 사용하기\r\n         ...mapActions('모듈명', ['액션명1', '액션명2']),\r\n      */\r\n    addCounter(num) {\r\n      console.log('addCounter num', num);\r\n      console.log('addCounter this.$data.counter', this.$data.counter);\r\n      this.$data.counter += num;\r\n    },\r\n    subCounter(num) {\r\n      console.log('subCounter num', num);\r\n      console.log('subCounter this.$data.counter', this.$data.counter);\r\n      this.$data.counter += num;\r\n    },\r\n  },\r\n  components: {\r\n    /* 전역 컴포넌트인 경우는 등록하지 않는다. 전역 컴포넌트는 프로토타입 체인으로 찾을 수 있기 때문에 */\r\n    /* 지역 컴포넌트나 파일 컴포넌트만 등록 한다. 예시) \"태그명\" : 컴포넌트명 */\r\n    Vue34exChild: Vue34exChild,\r\n  },\r\n  computed: {\r\n    /* 자동처리 + 동기식. 메서드로 작성. return 필수. data 와 공존 불가 */\r\n    /* vuex 를 사용하는 경우\r\n      mapGetters 는 store의 getters 를 가져오는 헬퍼메서드입니다.\r\n      namespaced: true를 설정한 경우 네임스페이스를 사용하기 때문에 store의 모듈 명을 적어주어야 합니다.\r\n      store 모듈에서 getters 를 가져오는 2가지 방식\r\n      1) store.모듈명.getters 이름 바꾸어 사용하기\r\n         ...mapGetters('모듈명', { get게터명1: '게터명1', get게터명2: '게터명2' }),\r\n      2) store.모듈명.getters 이름 그대로 사용하기(추천방식)\r\n         ...mapGetters('모듈명', ['게터명1', '게터명2']),\r\n      */\r\n  },\r\n  watch: {\r\n    /* 자동처리 + 비동기식. data 에 등록된 프로퍼티(변수) 모니터링. 메서드로 작성. 매개변수 필수. 외부 api 호출을 위해서 사용 */\r\n  },\r\n  created() {\r\n    console.log('created');\r\n  },\r\n  mounted() {\r\n    console.log('mounted');\r\n    /* store의 actions 호출 */\r\n    // this.$store.dispatch('액션명', payload);\r\n  },\r\n  updated() {\r\n    console.log('updated');\r\n  },\r\n};\r\n</script>\r\n","<style scoped></style>\r\n\r\n<template>\r\n  <div class=\"component-child\">\r\n    Child counter : {{ num }} <br />\r\n    <button name=\"child\" v-on:click=\"addCounter\">+</button>\r\n    <button name=\"child\" v-on:click=\"subCounter\">-</button>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n// vuex 라이브러리에서 mapActions, mapMutations, mapState, mapGetters 함를 가져옵니다.\r\n// import { mapActions, mapMutations, mapState, mapGetters } from 'vuex';\r\n\r\nexport default {\r\n  /* pdtmc^2w */\r\n  props: ['num'],\r\n  data() {\r\n    /* 컴포넌트 안에서 사용되는 변수 등록. 개별 변수 */\r\n    return {};\r\n  },\r\n  //template: ``,\r\n  methods: {\r\n    /* 이벤트 핸들러 등록 + 일반 함수 */\r\n    /* vuex 를 사용하는 경우\r\n      mapActions 는 store의 actions 를 가져오는 헬퍼 메서드입니다.\r\n      namespaced: true를 설정한 경우 네임스페이스를 사용하기 때문에 store의 모듈 명을 적어주어야 합니다.\r\n      store 모듈에서 actions 를 가져오는 2가지 방식\r\n      1) store.모듈명.actions 이름 바꾸어 사용하기(추천방식)\r\n         ...mapActions('모듈명', { dispatch액션명1: '액션명1', dispatch액션명2: '액션명2' }),\r\n      2) store.모듈명.actions 이름 그대로 사용하기\r\n         ...mapActions('모듈명', ['액션명1', '액션명2']),\r\n      */\r\n    addCounter(e) {\r\n      this.$emit('addCounter', +5);\r\n    },\r\n    subCounter(e) {\r\n      this.$emit('subCounter', -5);\r\n    },\r\n  },\r\n  components: {\r\n    /* 전역 컴포넌트인 경우는 등록하지 않는다. 전역 컴포넌트는 프로토타입 체인으로 찾을 수 있기 때문에 */\r\n    /* 지역 컴포넌트나 파일 컴포넌트만 등록 한다. 예시) \"태그명\" : 컴포넌트명 */\r\n  },\r\n  computed: {\r\n    /* 자동처리 + 동기식. 메서드로 작성. return 필수. data 와 공존 불가 */\r\n    /* vuex 를 사용하는 경우\r\n      mapGetters 는 store의 getters 를 가져오는 헬퍼메서드입니다.\r\n      namespaced: true를 설정한 경우 네임스페이스를 사용하기 때문에 store의 모듈 명을 적어주어야 합니다.\r\n      store 모듈에서 getters 를 가져오는 2가지 방식\r\n      1) store.모듈명.getters 이름 바꾸어 사용하기\r\n         ...mapGetters('모듈명', { get게터명1: '게터명1', get게터명2: '게터명2' }),\r\n      2) store.모듈명.getters 이름 그대로 사용하기(추천방식)\r\n         ...mapGetters('모듈명', ['게터명1', '게터명2']),\r\n      */\r\n  },\r\n  watch: {\r\n    /* 자동처리 + 비동기식. data 에 등록된 프로퍼티(변수) 모니터링. 메서드로 작성. 매개변수 필수. 외부 api 호출을 위해서 사용 */\r\n  },\r\n  created() {\r\n    console.log('created');\r\n  },\r\n  mounted() {\r\n    console.log('mounted');\r\n    /* store의 actions 호출 */\r\n    // this.$store.dispatch('액션명', payload);\r\n  },\r\n  updated() {\r\n    console.log('updated');\r\n  },\r\n};\r\n</script>\r\n","import { render } from \"./Vue34exChild.vue?vue&type=template&id=f9e92634\"\nimport script from \"./Vue34exChild.vue?vue&type=script&lang=js\"\nexport * from \"./Vue34exChild.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import { render } from \"./Vue34exParent.vue?vue&type=template&id=09784695&scoped=true\"\nimport script from \"./Vue34exParent.vue?vue&type=script&lang=js\"\nexport * from \"./Vue34exParent.vue?vue&type=script&lang=js\"\n\nimport \"./Vue34exParent.vue?vue&type=style&index=0&id=09784695&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-09784695\"]])\n\nexport default __exports__","import { render } from \"./Vue34exView.vue?vue&type=template&id=1933565a\"\nimport script from \"./Vue34exView.vue?vue&type=script&lang=js\"\nexport * from \"./Vue34exView.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<style scoped></style>\r\n\r\n<template>\r\n  <div>\r\n    Vue3501View\r\n    <Vue3501Comp></Vue3501Comp>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n// vuex 라이브러리에서 mapActions, mapMutations, mapState, mapGetters 함를 가져옵니다.\r\n// import { mapActions, mapMutations, mapState, mapGetters } from 'vuex';\r\nimport Vue3501Comp from '../components/vue3501/Vue3501Comp.vue';\r\nexport default {\r\n  /* pdtmc^2w */\r\n  props: [],\r\n  data() {\r\n    /* 컴포넌트 안에서 사용되는 변수 등록. 개별 변수 */\r\n    return {};\r\n  },\r\n  //template: ``,\r\n  methods: {\r\n    /* 이벤트 핸들러 등록 + 일반 함수 */\r\n    /* vuex 를 사용하는 경우\r\n      mapActions 는 store의 actions 를 가져오는 헬퍼 메서드입니다.\r\n      namespaced: true를 설정한 경우 네임스페이스를 사용하기 때문에 store의 모듈 명을 적어주어야 합니다.\r\n      store 모듈에서 actions 를 가져오는 2가지 방식\r\n      1) store.모듈명.actions 이름 바꾸어 사용하기(추천방식)\r\n         ...mapActions('모듈명', { dispatch액션명1: '액션명1', dispatch액션명2: '액션명2' }),\r\n      2) store.모듈명.actions 이름 그대로 사용하기\r\n         ...mapActions('모듈명', ['액션명1', '액션명2']),\r\n      */\r\n  },\r\n  components: {\r\n    /* 전역 컴포넌트인 경우는 등록하지 않는다. 전역 컴포넌트는 프로토타입 체인으로 찾을 수 있기 때문에 */\r\n    /* 지역 컴포넌트나 파일 컴포넌트만 등록 한다. 예시) \"태그명\" : 컴포넌트명 */\r\n    Vue3501Comp: Vue3501Comp,\r\n  },\r\n  computed: {\r\n    /* 자동처리 + 동기식. 메서드로 작성. return 필수. data 와 공존 불가 */\r\n    /* vuex 를 사용하는 경우\r\n      mapGetters 는 store의 getters 를 가져오는 헬퍼메서드입니다.\r\n      namespaced: true를 설정한 경우 네임스페이스를 사용하기 때문에 store의 모듈 명을 적어주어야 합니다.\r\n      store 모듈에서 getters 를 가져오는 2가지 방식\r\n      1) store.모듈명.getters 이름 바꾸어 사용하기\r\n         ...mapGetters('모듈명', { get게터명1: '게터명1', get게터명2: '게터명2' }),\r\n      2) store.모듈명.getters 이름 그대로 사용하기(추천방식)\r\n         ...mapGetters('모듈명', ['게터명1', '게터명2']),\r\n      */\r\n  },\r\n  watch: {\r\n    /* 자동처리 + 비동기식. data 에 등록된 프로퍼티(변수) 모니터링. 메서드로 작성. 매개변수 필수. 외부 api 호출을 위해서 사용 */\r\n  },\r\n  created() {\r\n    console.log('created');\r\n  },\r\n  mounted() {\r\n    console.log('mounted');\r\n    /* store의 actions 호출 */\r\n    // this.$store.dispatch('액션명', payload);\r\n  },\r\n  updated() {\r\n    console.log('updated');\r\n  },\r\n};\r\n</script>\r\n","<style scoped>\r\ninput:focus {\r\n  background-color: lightskyblue;\r\n  border: 3px solid #555;\r\n}\r\n</style>\r\n\r\n<template>\r\n  <div id=\"app\">\r\n    <p>\r\n      ref 사용 예제<br />\r\n      페이지가 로딩되면 myinput1에 포커스를 주시오 <br />\r\n      버튼을 클릭하면 myinput2에 포커스를 주시오 <br />\r\n    </p>\r\n    <div>\r\n      <div>\r\n        <label>myinput1</label>\r\n        <input type=\"text\" ref=\"myinput1\" v-model=\"message\" />\r\n      </div>\r\n      <div>\r\n        {{ message }}\r\n      </div>\r\n    </div>\r\n    <div>\r\n      <label>myinput2</label>\r\n      <input type=\"text\" ref=\"myinput2\" />\r\n    </div>\r\n    <button v-on:click=\"handlerMyinput1\">포커스 이동</button>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n// vuex 라이브러리에서 mapActions, mapMutations, mapState, mapGetters 함를 가져옵니다.\r\n// import { mapActions, mapMutations, mapState, mapGetters } from 'vuex';\r\n\r\nexport default {\r\n  /* pdtmc^2w */\r\n  props: [],\r\n  data() {\r\n    /* 컴포넌트 안에서 사용되는 변수 등록. 개별 변수 */\r\n    return { message: null };\r\n  },\r\n  //template: ``,\r\n  methods: {\r\n    /* 이벤트 핸들러 등록 + 일반 함수 */\r\n    /* vuex 를 사용하는 경우\r\n      mapActions 는 store의 actions 를 가져오는 헬퍼 메서드입니다.\r\n      namespaced: true를 설정한 경우 네임스페이스를 사용하기 때문에 store의 모듈 명을 적어주어야 합니다.\r\n      store 모듈에서 actions 를 가져오는 2가지 방식\r\n      1) store.모듈명.actions 이름 바꾸어 사용하기(추천방식)\r\n         ...mapActions('모듈명', { dispatch액션명1: '액션명1', dispatch액션명2: '액션명2' }),\r\n      2) store.모듈명.actions 이름 그대로 사용하기\r\n         ...mapActions('모듈명', ['액션명1', '액션명2']),\r\n      */\r\n    handlerMyinput1(e) {},\r\n  },\r\n  components: {\r\n    /* 전역 컴포넌트인 경우는 등록하지 않는다. 전역 컴포넌트는 프로토타입 체인으로 찾을 수 있기 때문에 */\r\n    /* 지역 컴포넌트나 파일 컴포넌트만 등록 한다. 예시) \"태그명\" : 컴포넌트명 */\r\n  },\r\n  computed: {\r\n    /* 자동처리 + 동기식. 메서드로 작성. return 필수. data 와 공존 불가 */\r\n    /* vuex 를 사용하는 경우\r\n      mapGetters 는 store의 getters 를 가져오는 헬퍼메서드입니다.\r\n      namespaced: true를 설정한 경우 네임스페이스를 사용하기 때문에 store의 모듈 명을 적어주어야 합니다.\r\n      store 모듈에서 getters 를 가져오는 2가지 방식\r\n      1) store.모듈명.getters 이름 바꾸어 사용하기\r\n         ...mapGetters('모듈명', { get게터명1: '게터명1', get게터명2: '게터명2' }),\r\n      2) store.모듈명.getters 이름 그대로 사용하기(추천방식)\r\n         ...mapGetters('모듈명', ['게터명1', '게터명2']),\r\n      */\r\n  },\r\n  watch: {\r\n    /* 자동처리 + 비동기식. data 에 등록된 프로퍼티(변수) 모니터링. 메서드로 작성. 매개변수 필수. 외부 api 호출을 위해서 사용 */\r\n  },\r\n  created() {\r\n    console.log('created');\r\n  },\r\n  mounted() {\r\n    console.log('mounted');\r\n    /* store의 actions 호출 */\r\n    // this.$store.dispatch('액션명', payload);\r\n    this.$refs.myinput1.focus();\r\n  },\r\n  updated() {\r\n    console.log('updated');\r\n  },\r\n};\r\n</script>\r\n","import { render } from \"./Vue3501Comp.vue?vue&type=template&id=935542b0&scoped=true\"\nimport script from \"./Vue3501Comp.vue?vue&type=script&lang=js\"\nexport * from \"./Vue3501Comp.vue?vue&type=script&lang=js\"\n\nimport \"./Vue3501Comp.vue?vue&type=style&index=0&id=935542b0&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-935542b0\"]])\n\nexport default __exports__","import { render } from \"./Vue3501View.vue?vue&type=template&id=0bf6607b\"\nimport script from \"./Vue3501View.vue?vue&type=script&lang=js\"\nexport * from \"./Vue3501View.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<style>\r\n#app {\r\n  font-family: Avenir, Helvetica, Arial, sans-serif;\r\n  -webkit-font-smoothing: antialiased;\r\n  -moz-osx-font-smoothing: grayscale;\r\n  text-align: center;\r\n  color: #2c3e50;\r\n}\r\n</style>\r\n\r\n<template>\r\n  <div id=\"app\">\r\n    <h2>{{ msg }}</h2>\r\n    <child1 />\r\n    <child2 />\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n// vuex 라이브러리에서 mapActions, mapMutations, mapState, mapGetters 함를 가져옵니다.\r\n// import { mapActions, mapMutations, mapState, mapGetters } from 'vuex';\r\n\r\nimport CompChild1 from '../components/vue3701/CompChild1.vue';\r\nimport CompChild2 from '../components/vue3701/CompChild2.vue';\r\nexport default {\r\n  /* pdtmc^2w */\r\n  props: [],\r\n  data() {\r\n    /* 컴포넌트 안에서 사용되는 변수 등록. 개별 변수 */\r\n    return {\r\n      msg: 'welcome vue.js app',\r\n    };\r\n  },\r\n  //template: ``,\r\n  methods: {\r\n    /* 이벤트 핸들러 등록 + 일반 함수 */\r\n    /* vuex 를 사용하는 경우\r\n      mapActions 는 store의 actions 를 가져오는 헬퍼 메서드입니다.\r\n      namespaced: true를 설정한 경우 네임스페이스를 사용하기 때문에 store의 모듈 명을 적어주어야 합니다.\r\n      store 모듈에서 actions 를 가져오는 2가지 방식\r\n      1) store.모듈명.actions 이름 바꾸어 사용하기(추천방식)\r\n         ...mapActions('모듈명', { dispatch액션명1: '액션명1', dispatch액션명2: '액션명2' }),\r\n      2) store.모듈명.actions 이름 그대로 사용하기\r\n         ...mapActions('모듈명', ['액션명1', '액션명2']),\r\n      */\r\n  },\r\n  components: {\r\n    /* 전역 컴포넌트인 경우는 등록하지 않는다. 전역 컴포넌트는 프로토타입 체인으로 찾을 수 있기 때문에 */\r\n    /* 지역 컴포넌트나 파일 컴포넌트만 등록 한다. 예시) \"태그명\" : 컴포넌트명 */\r\n    child1: CompChild1,\r\n    child2: CompChild2,\r\n  },\r\n  computed: {\r\n    /* 자동처리 + 동기식. 메서드로 작성. return 필수. data 와 공존 불가 */\r\n    /* vuex 를 사용하는 경우\r\n      mapGetters 는 store의 getters 를 가져오는 헬퍼메서드입니다.\r\n      namespaced: true를 설정한 경우 네임스페이스를 사용하기 때문에 store의 모듈 명을 적어주어야 합니다.\r\n      store 모듈에서 getters 를 가져오는 2가지 방식\r\n      1) store.모듈명.getters 이름 바꾸어 사용하기\r\n         ...mapGetters('모듈명', { get게터명1: '게터명1', get게터명2: '게터명2' }),\r\n      2) store.모듈명.getters 이름 그대로 사용하기(추천방식)\r\n         ...mapGetters('모듈명', ['게터명1', '게터명2']),\r\n      */\r\n  },\r\n  watch: {\r\n    /* 자동처리 + 비동기식. data 에 등록된 프로퍼티(변수) 모니터링. 메서드로 작성. 매개변수 필수. 외부 api 호출을 위해서 사용 */\r\n  },\r\n  created() {\r\n    console.log('created');\r\n  },\r\n  mounted() {\r\n    console.log('mounted');\r\n    /* store의 actions 호출 */\r\n    // this.$store.dispatch('액션명', payload);\r\n  },\r\n  updated() {\r\n    console.log('updated');\r\n  },\r\n};\r\n</script>\r\n","<style scoped>\r\n.main {\r\n  border: solid 1px black;\r\n  background-color: yellow;\r\n}\r\n</style>\r\n<template>\r\n  <div class=\"main\">\r\n    {{ msg }}\r\n    <child11 />\r\n    {{ msg }}\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n// vuex 라이브러리에서 mapActions, mapMutations, mapState, mapGetters 함를 가져옵니다.\r\n// import { mapActions, mapMutations, mapState, mapGetters } from 'vuex';\r\nimport CompChild11 from './CompChild11.vue';\r\nexport default {\r\n  /* pdtmc^2w */\r\n  props: [],\r\n  data() {\r\n    /* 컴포넌트 안에서 사용되는 변수 등록. 개별 변수 */\r\n    return { msg: 'CompChild1' };\r\n  },\r\n  //template: ``,\r\n  methods: {\r\n    /* 이벤트 핸들러 등록 + 일반 함수 */\r\n    /* vuex 를 사용하는 경우\r\n      mapActions 는 store의 actions 를 가져오는 헬퍼 메서드입니다.\r\n      namespaced: true를 설정한 경우 네임스페이스를 사용하기 때문에 store의 모듈 명을 적어주어야 합니다.\r\n      store 모듈에서 actions 를 가져오는 2가지 방식\r\n      1) store.모듈명.actions 이름 바꾸어 사용하기(추천방식)\r\n         ...mapActions('모듈명', { dispatch액션명1: '액션명1', dispatch액션명2: '액션명2' }),\r\n      2) store.모듈명.actions 이름 그대로 사용하기\r\n         ...mapActions('모듈명', ['액션명1', '액션명2']),\r\n      */\r\n  },\r\n  components: {\r\n    /* 전역 컴포넌트인 경우는 등록하지 않는다. 전역 컴포넌트는 프로토타입 체인으로 찾을 수 있기 때문에 */\r\n    /* 지역 컴포넌트나 파일 컴포넌트만 등록 한다. 예시) \"태그명\" : 컴포넌트명 */\r\n    child11: CompChild11,\r\n  },\r\n  computed: {\r\n    /* 자동처리 + 동기식. 메서드로 작성. return 필수. data 와 공존 불가 */\r\n    /* vuex 를 사용하는 경우\r\n      mapGetters 는 store의 getters 를 가져오는 헬퍼메서드입니다.\r\n      namespaced: true를 설정한 경우 네임스페이스를 사용하기 때문에 store의 모듈 명을 적어주어야 합니다.\r\n      store 모듈에서 getters 를 가져오는 2가지 방식\r\n      1) store.모듈명.getters 이름 바꾸어 사용하기\r\n         ...mapGetters('모듈명', { get게터명1: '게터명1', get게터명2: '게터명2' }),\r\n      2) store.모듈명.getters 이름 그대로 사용하기(추천방식)\r\n         ...mapGetters('모듈명', ['게터명1', '게터명2']),\r\n      */\r\n  },\r\n  watch: {\r\n    /* 자동처리 + 비동기식. data 에 등록된 프로퍼티(변수) 모니터링. 메서드로 작성. 매개변수 필수. 외부 api 호출을 위해서 사용 */\r\n  },\r\n  created() {\r\n    console.log('created');\r\n  },\r\n  mounted() {\r\n    console.log('mounted');\r\n    /* store의 actions 호출 */\r\n    // this.$store.dispatch('액션명', payload);\r\n  },\r\n  updated() {\r\n    console.log('updated');\r\n  },\r\n};\r\n</script>\r\n","<style scoped>\r\n.test {\r\n  font-style: italic;\r\n}\r\n</style>\r\n<template>\r\n  <div class=\"test\">\r\n    <h3>{{ msg }}</h3>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n// vuex 라이브러리에서 mapActions, mapMutations, mapState, mapGetters 함를 가져옵니다.\r\n// import { mapActions, mapMutations, mapState, mapGetters } from 'vuex';\r\n\r\nexport default {\r\n  /* pdtmc^2w */\r\n  props: [],\r\n  data() {\r\n    /* 컴포넌트 안에서 사용되는 변수 등록. 개별 변수 */\r\n    return { msg: 'CompChild11' };\r\n  },\r\n  //template: ``,\r\n  methods: {\r\n    /* 이벤트 핸들러 등록 + 일반 함수 */\r\n    /* vuex 를 사용하는 경우\r\n      mapActions 는 store의 actions 를 가져오는 헬퍼 메서드입니다.\r\n      namespaced: true를 설정한 경우 네임스페이스를 사용하기 때문에 store의 모듈 명을 적어주어야 합니다.\r\n      store 모듈에서 actions 를 가져오는 2가지 방식\r\n      1) store.모듈명.actions 이름 바꾸어 사용하기(추천방식)\r\n         ...mapActions('모듈명', { dispatch액션명1: '액션명1', dispatch액션명2: '액션명2' }),\r\n      2) store.모듈명.actions 이름 그대로 사용하기\r\n         ...mapActions('모듈명', ['액션명1', '액션명2']),\r\n      */\r\n  },\r\n  components: {\r\n    /* 전역 컴포넌트인 경우는 등록하지 않는다. 전역 컴포넌트는 프로토타입 체인으로 찾을 수 있기 때문에 */\r\n    /* 지역 컴포넌트나 파일 컴포넌트만 등록 한다. 예시) \"태그명\" : 컴포넌트명 */\r\n  },\r\n  computed: {\r\n    /* 자동처리 + 동기식. 메서드로 작성. return 필수. data 와 공존 불가 */\r\n    /* vuex 를 사용하는 경우\r\n      mapGetters 는 store의 getters 를 가져오는 헬퍼메서드입니다.\r\n      namespaced: true를 설정한 경우 네임스페이스를 사용하기 때문에 store의 모듈 명을 적어주어야 합니다.\r\n      store 모듈에서 getters 를 가져오는 2가지 방식\r\n      1) store.모듈명.getters 이름 바꾸어 사용하기\r\n         ...mapGetters('모듈명', { get게터명1: '게터명1', get게터명2: '게터명2' }),\r\n      2) store.모듈명.getters 이름 그대로 사용하기(추천방식)\r\n         ...mapGetters('모듈명', ['게터명1', '게터명2']),\r\n      */\r\n  },\r\n  watch: {\r\n    /* 자동처리 + 비동기식. data 에 등록된 프로퍼티(변수) 모니터링. 메서드로 작성. 매개변수 필수. 외부 api 호출을 위해서 사용 */\r\n  },\r\n  created() {\r\n    console.log('created');\r\n  },\r\n  mounted() {\r\n    console.log('mounted');\r\n    /* store의 actions 호출 */\r\n    // this.$store.dispatch('액션명', payload);\r\n  },\r\n  updated() {\r\n    console.log('updated');\r\n  },\r\n};\r\n</script>\r\n","import { render } from \"./CompChild11.vue?vue&type=template&id=4c402348&scoped=true\"\nimport script from \"./CompChild11.vue?vue&type=script&lang=js\"\nexport * from \"./CompChild11.vue?vue&type=script&lang=js\"\n\nimport \"./CompChild11.vue?vue&type=style&index=0&id=4c402348&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-4c402348\"]])\n\nexport default __exports__","import { render } from \"./CompChild1.vue?vue&type=template&id=9a18fc88&scoped=true\"\nimport script from \"./CompChild1.vue?vue&type=script&lang=js\"\nexport * from \"./CompChild1.vue?vue&type=script&lang=js\"\n\nimport \"./CompChild1.vue?vue&type=style&index=0&id=9a18fc88&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-9a18fc88\"]])\n\nexport default __exports__","<style scoped>\r\n.main {\r\n  border: 1px solid black;\r\n  background-color: aqua;\r\n}\r\n</style>\r\n\r\n<template>\r\n  <div class=\"main\">\r\n    {{ msg }}\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n// vuex 라이브러리에서 mapActions, mapMutations, mapState, mapGetters 함를 가져옵니다.\r\n// import { mapActions, mapMutations, mapState, mapGetters } from 'vuex';\r\n\r\nexport default {\r\n  /* pdtmc^2w */\r\n  props: [],\r\n  data() {\r\n    /* 컴포넌트 안에서 사용되는 변수 등록. 개별 변수 */\r\n    return { msg: 'CompChild2' };\r\n  },\r\n  //template: ``,\r\n  methods: {\r\n    /* 이벤트 핸들러 등록 + 일반 함수 */\r\n    /* vuex 를 사용하는 경우\r\n      mapActions 는 store의 actions 를 가져오는 헬퍼 메서드입니다.\r\n      namespaced: true를 설정한 경우 네임스페이스를 사용하기 때문에 store의 모듈 명을 적어주어야 합니다.\r\n      store 모듈에서 actions 를 가져오는 2가지 방식\r\n      1) store.모듈명.actions 이름 바꾸어 사용하기(추천방식)\r\n         ...mapActions('모듈명', { dispatch액션명1: '액션명1', dispatch액션명2: '액션명2' }),\r\n      2) store.모듈명.actions 이름 그대로 사용하기\r\n         ...mapActions('모듈명', ['액션명1', '액션명2']),\r\n      */\r\n  },\r\n  components: {\r\n    /* 전역 컴포넌트인 경우는 등록하지 않는다. 전역 컴포넌트는 프로토타입 체인으로 찾을 수 있기 때문에 */\r\n    /* 지역 컴포넌트나 파일 컴포넌트만 등록 한다. 예시) \"태그명\" : 컴포넌트명 */\r\n  },\r\n  computed: {\r\n    /* 자동처리 + 동기식. 메서드로 작성. return 필수. data 와 공존 불가 */\r\n    /* vuex 를 사용하는 경우\r\n      mapGetters 는 store의 getters 를 가져오는 헬퍼메서드입니다.\r\n      namespaced: true를 설정한 경우 네임스페이스를 사용하기 때문에 store의 모듈 명을 적어주어야 합니다.\r\n      store 모듈에서 getters 를 가져오는 2가지 방식\r\n      1) store.모듈명.getters 이름 바꾸어 사용하기\r\n         ...mapGetters('모듈명', { get게터명1: '게터명1', get게터명2: '게터명2' }),\r\n      2) store.모듈명.getters 이름 그대로 사용하기(추천방식)\r\n         ...mapGetters('모듈명', ['게터명1', '게터명2']),\r\n      */\r\n  },\r\n  watch: {\r\n    /* 자동처리 + 비동기식. data 에 등록된 프로퍼티(변수) 모니터링. 메서드로 작성. 매개변수 필수. 외부 api 호출을 위해서 사용 */\r\n  },\r\n  created() {\r\n    console.log('created');\r\n  },\r\n  mounted() {\r\n    console.log('mounted');\r\n    /* store의 actions 호출 */\r\n    // this.$store.dispatch('액션명', payload);\r\n  },\r\n  updated() {\r\n    console.log('updated');\r\n  },\r\n};\r\n</script>\r\n","import { render } from \"./CompChild2.vue?vue&type=template&id=35f8bfca&scoped=true\"\nimport script from \"./CompChild2.vue?vue&type=script&lang=js\"\nexport * from \"./CompChild2.vue?vue&type=script&lang=js\"\n\nimport \"./CompChild2.vue?vue&type=style&index=0&id=35f8bfca&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-35f8bfca\"]])\n\nexport default __exports__","import { render } from \"./Vue3701View.vue?vue&type=template&id=d2502ef2\"\nimport script from \"./Vue3701View.vue?vue&type=script&lang=js\"\nexport * from \"./Vue3701View.vue?vue&type=script&lang=js\"\n\nimport \"./Vue3701View.vue?vue&type=style&index=0&id=d2502ef2&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__"],"names":["class","_createElementVNode","_hoisted_2","_createElementBlock","_hoisted_1","_hoisted_3","script","__exports__","render","id","_createVNode","_component_Vue4301Comp","_toDisplayString","$data","header","_ctx","welcome","counter","type","callapi","$event","onClick","_cache","args","$options","handlerIncrement","handlerDecrement","props","data","methods","mapActions","dispatchSetCounter","e","console","log","target","this","components","computed","mapGetters","watch","created","mounted","updated","Vue4301Comp","_component_TodoHeader","_component_TodoInput","onAddTodo","addTodo","_component_TodoList","todoItems","onDoneToggle","doneToggle","onRemoveTodo","removeTodo","_component_TodoFooter","onClearAll","clearAll","clickAll","$emit","placeholder","newTodoItem","ref","showModal","onKeyup","_withKeys","onClose","_hoisted_4","_hoisted_5","_hoisted_6","_hoisted_7","_hoisted_8","trim","length","$refs","refNewTodoItem","focus","_Fragment","_renderList","$props","item","_normalizeClass","done","key","todo","_withModifiers","ids","map","maxId","reduce","pvalue","cvalue","newTodo","filter","TodoHeader","TodoFooter","TodoInput","TodoList","clickAddBox","arr","val","i","_component_Vue3104Counter","num","style","push","Vue3104Counter","_component_Vue3103Comp","localmsg","localmsg1","localmsg2","lclick","Vue3103Comp","mesg","_component_Vue3403Comp","onShowLog","printText","showLog","param1","param2","Vue3403Comp","_component_Vue34exParent","name","addCounter","subCounter","_component_Vue34exChild","onAddCounter","onSubCounter","Vue34exChild","Vue34exParent","_component_Vue3501Comp","message","handlerMyinput1","myinput1","Vue3501Comp","msg","_component_child1","_component_child2","_component_child11","child11","CompChild11","child1","CompChild1","child2","CompChild2"],"sourceRoot":""}